<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1024</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize screen settings
width = 320;
height = 240;
window_mode = (window_get_width()&gt;width or window_get_height()&gt;height)+(window_get_fullscreen()*2);
window_scale = 1+(window_mode&amp;1);
split_screen = false;
screenshot[0] = -1;
screenshot[1] = -1;
paused = false;

// update window
window_set_fullscreen(window_mode&amp;2);
window_set_size(width*window_scale, height*window_scale);

// os properties
fullscreen_enabled = false;
switch os_type
{
case os_windows:
case os_macosx:
    if os_browser!=browser_not_a_browser break;
    fullscreen_enabled = true;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unpause
if not paused
{
    if screenshot[0]&gt;-1 {background_delete(screenshot[0]); screenshot[0] = -1;}
    if screenshot[1]&gt;-1 {background_delete(screenshot[1]); screenshot[1] = -1;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clean up
if screenshot[0]&gt;-1 {background_delete(screenshot[0]); screenshot[0] = -1;}
if screenshot[1]&gt;-1 {background_delete(screenshot[1]); screenshot[1] = -1;}
if surface_exists(view_surface_id[1]) {surface_free(view_surface_id[1]); view_surface_id[1] = -1;}
if surface_exists(view_surface_id[2]) {surface_free(view_surface_id[2]); view_surface_id[2] = -1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup views
var i;

// setup views
view_enabled = true;
for (i=0; i&lt;3; i+=1)
{
    view_wview[i] = width;
    view_hview[i] = height;
    view_wport[i] = width;
    view_hport[i] = height;
}

// setup surfaces
view_visible[0] = true;
view_visible[1] = true;
view_surface_id[1] = surface_create(width, height);
if split_screen
{
    view_visible[2] = true;
    view_surface_id[2] = surface_create(width, height);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle surfaces
switch view_current
{
case 0: // screen
    // clear background
    draw_set_color(background_color);
    draw_rectangle(0, 0, width, height, false);

    // handle split-screen
    if split_screen
    {
        // player one
        if screenshot[0]&gt;-1 draw_background_stretched(screenshot[0], 0, 0, width, height/2); else
        if surface_exists(view_surface_id[1]) draw_surface_stretched(view_surface_id[1], 0, 0, width, height/2);

        // player two
        if screenshot[1]&gt;-1 draw_background_stretched(screenshot[1], 0, height/2, width, height/2); else
        if surface_exists(view_surface_id[2]) draw_surface_stretched(view_surface_id[2], 0, height/2, width, height/2);
    }
    else
    {
        // player one
        if screenshot[0]&gt;-1 draw_background(screenshot[0], 0, 0); else
        if surface_exists(view_surface_id[1]) draw_surface(view_surface_id[1], 0, 0);
    }
    break;

default: // buffers
    if not view_visible[view_current] break;
    if not surface_exists(view_surface_id[view_current]) view_surface_id[view_current] = surface_create(width, height);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle screen mode
window_mode = (window_mode+1) mod (2+fullscreen_enabled);
window_scale = 1+(window_mode&amp;1);

// update window
window_set_fullscreen(window_mode&amp;2);
window_set_size(width*window_scale, height*window_scale);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
