<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1025</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize HUD
image_speed = 0;

// character id(s)
character_id[0] = max(objGameData.character_id[0]-1, 0);
character_id[1] = max(objGameData.character_id[1]-1, 0);

// time stamp
time_stamp = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>objScreen.image_index div 8</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update timer string
var total_time, minutes, seconds;

// total time
total_time = min(36000-objLevel.timer, 35999);

// minutes
minutes = string(total_time div 3600);

// seconds
seconds = (total_time div 60) mod 60;
if (seconds&lt;10) seconds = "0"+string(seconds); else
seconds = string(seconds);

// update time stamp
time_stamp = minutes+" "+seconds;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render HUD
if view_current==0 exit;

// lives setpiece
draw_sprite(sprLives, character_id[view_current-1], view_xview[view_current]+16, view_yview[view_current]+view_hview-24);

// score / time / rings setpieces
if not objScreen.split_screen draw_sprite(sprHud, 0, view_xview[view_current]+16, view_yview[view_current]+9);
draw_sprite(sprHud, 1+(image_index mod 2)*(objLevel.timer&lt;3600), view_xview[view_current]+16, view_yview[view_current]+25-(16*objScreen.split_screen));
draw_sprite(sprHud, 3+(image_index mod 2)*(not objGameData.rings[view_current-1]), view_xview[view_current]+16, view_yview[view_current]+41-(16*objScreen.split_screen));

// lives string
draw_set_color(c_white);
draw_set_alpha(image_alpha);
draw_set_valign(fa_top);
draw_set_halign(fa_right);
draw_set_font(objResources.fontLives);
draw_text(view_xview[view_current]+65, view_yview[view_current]+view_hview[view_current]-15, objGameData.player_lives[view_current-1]);

// score / time / rings string
draw_set_font(objResources.fontHud);
if not objScreen.split_screen draw_text(view_xview[view_current]+112, view_yview[view_current]+9, objGameData.player_score[view_current-1]);
draw_text(view_xview[view_current]+88, view_yview[view_current]+41-(16*objScreen.split_screen), objGameData.rings[view_current-1]);
draw_set_halign(fa_left);
draw_text(view_xview[view_current]+56, view_yview[view_current]+25-(16*objScreen.split_screen), time_stamp);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
